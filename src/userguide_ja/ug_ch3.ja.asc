画面構成
========

VSDの開発画面構成と各機能の概要を説明します。 +
VSDは編集中のプロジェクトの種類に応じて複数のワークスペースを提供します。 +
一般的には3つのワークスペースがあり、それぞれ以下の役割を持っています。 +

- リソースの編集
- UIの編集
- コンポーネントの表示


........
........

== GUI Editor

image:images/vsd_web_display01.png[height=300] +

.Menu
- __Close__ +
  プロジェクトを終了し、プロジェクト選択画面に遷移します。 +
- __Run__ +
  作成したアプリケーションをVSDシミュレータ上で実行します。 +  
- __Settings__ +
  プロジェクトのコンフィギュレーションの設定変更を行います。 +
  対象デバイスの変更や対象デバイス情報の変更、アプリケーション情報の変更等が可能です。 +
- __Resource Editor__ +
  Resource Editor画面を表示します。 +  
- __GUI Editor__ +
  GUI Ediotor画面を表示します。 +  
- __Components Editor__ +
  Components Editor画面を表示します。 +
- __Dataflow__ +
  Dataflow画面を表示します。 +


.Side Bar(Left)
- __GUI Inspector__、__Specification__、__Events__などのビューを提供します。 +


.Main Area
- デバイスイメージを提供するイメージビューです。ウィジェットの配置などを行います。 +


.Side Bar(Right)
- __Widgets &amp; Tools__、__App Components__などのビューを提供します。 +

.View Menu
- デバイスイメージ上でグラフィカルにウィジェットの配置や各種プロパティ・イベントなどの
設定を行うための各種ビューの切り替えを行います。

........
........

=== GUI Inspector

image:images/vsd_display_inspector01.png[height=300]
image:images/vsd_display_inspector02.png[height=300] +
image:images/vsd_display_inspector03.png[height=300]
image:images/vsd_display_inspector04.png[height=300] +

// .GUI Inspector

対象となるウィジェットの各種設定を行うためのビューです。 +
4つにカテゴリ分けされ、設定ビューをタブで切り替えることが可能です。 +

- __Metric__ +
  対象ウィジェットのサイズや位置など主にレイアウトに関する設定を行うことが可能です。 +
- __Font__ +
  対象ウィジェットのフォントやテキストレイアウトに関する設定を行うことが可能です。 +
- __Bkgd__ +
  対象ウィジェットの背景に関する設定を行うことが可能です。 +
- __Border__ +
  対象ウィジェットの枠に関する設定を行うことが可能です。 +

........
........

=== Specification

image:images/vsd_display_specification.png[height=300]

// .Specification

対象ウィジェットが保持するプロパティの設定を行うためのビューです。 +
プロパティ名とプロパティのアクセスタイプが表示されます。 +
各プロパティを選択すると、対象プロパティの編集が可能です。 +
各プロパティの詳細は、対象ウィジェットのリファレンス +
（__Help__ -> __ViniSketch API &amp; Guidlines__）を参照してください。


........
........

=== Events

image:images/vsd_display_events.png[height=300]

// .Events

対象ウィジェットに対するイベントの設定を行うためのビューです。 +
イベント種別が表示されます。 +
イベントが登録されている場合は、ウィジェット名とイベント発生時に呼び出される
リスナー名が表示されます。 +
1つのイベントタイプに対して、複数のイベントを登録することが可能です。 +

........
........

=== Widgets & Tools

image:images/vsd_display_wt01.png[height=300]
image:images/vsd_display_wt02.png[height=300] +
image:images/vsd_display_wt03.png[height=300]


// .Widgets & Tools

利用可能なウィジェットを初めとするコンポーネントを提供するビューです。 +
各ウィジェットはドラッグ&amp;ドロップで、イメージビューへの配置が可能です。 +
各コンポーネントの詳細に関しては、VSDのHelpにある"ViniSketch API &amp; Guidlines"を
参照してください。 +


- __Widgets__ +
  UIを持つ代表的なコンポーネントを提供します。 +
  __View__、__Widgets__、__Extenstions__にカテゴリ分けされています。 +
- __Data src.__ +
  データのマネジメント行うためのUIを持たないコンポーネントを提供します。 +
- __My comp.__ +
  開発者がクラスから派生させて生成した独自のコンポーネントが格納されます。 +

........
........

=== App Components

image:images/vsd_display_appcomp.png[height=300]

// .App Components

配置されているコンポーネントリストを表示します。 +
ウィジェットの選択・可視化設定・複製や削除などの機能を提供します。 +
歯車マークがついているコンポーネントはJavaScriptコード生成済みであり、
独自の振る舞いを設定可能です。 +
また、各コンポーネントに対して、子オブジェクトの追加やJavaScriptコードの
生成などを行うことも可能です。 +
メインビューに関しては、CSSファイルの追加と削除を行うことも可能です。 +
（コンポーネント上でCtrl+クリックでメニューを開き、"Add CSS code"を選択する。） +

........
........

=== 基本操作

image:images/vsd_main_ope01.png[height=300] +

// .基本操作

- __対象端末の変更（A）__ +
  アプリケーションのターゲットデバイスを設定します。 +
  __Settings__メニューでのターゲットデバイス設定にしたがってプルダウンメニューから対象とするデバイスを選択することができます。 +
- __コンポーネントのパス（B）__ +
  エディタでコンポーネントが選択されている場合、このパスは選択したコンポーネントの名前と親のリストを表示します。 +
正確かつ迅速に親コンポーネントを選択する為に、このリストの項目を選択することもできます。 +
- __端末のオリエンテーション（C）__ +
  __Setting__メニューで各対象端末に選択されているオリエンテーションが選択できます。 +
- __ワークスペースの移動（D）__ +
  このアイコンをクリックすると作業領域の移動が可能になります。 +
  ディスプレイのスペースに対して作業領域が大きい場合などにエリア全体を移動することができます。 +
- __ズーム（E）__ +
  作業領域の拡縮を行います。 +
- __選択されたグラフィックコンポーネント（F）__ +
  選択されたグラフィックコンポーネントは点線の枠で表示されます。 +
コンポーネントのサイズを変更するには角と縁の黄色い丸でハンドルが表示されます。 +
特定のコンポーネントではリサイズが出来ないか、縦または横の一方しか変更できません。その場合には対応するハンドルが表示されません。 +
- __グラフィカルコンポーネントのドラッグ＆ドロップ__ +
  VSDは、グラフィックスアプリケーションのコーディング時間を短縮できる強力なUIを構築する為のツールを提供します。 +
ドラッグ＆ドロップで新しいウィジェットをアプリケーションに追加し、特定の処理を行います。 +
オブジェクトは、それが配置できる場所である場合、バブルでアンカーポイント（通常は"children")を表示します。 +
オブジェクトが配置できない場合、バブルで配置できない旨の情報を表示します。 +

........
........

== Resource Editor

image:images/vsd_display_code.png[height=300]

// .Resource Editor
- リソースエディタでは、プロジェクトに含まれている特定のリソースを表示および編集することができます。 +
ソースコードは、JavaScript、CSSやHTMLを編集することが出来ます。 +
- __App Components__で編集可能なソースコード（歯車アイコン有）を選択・表示することが可能です。 +

image:images/vsd_console_ope01.png[height=300] +

- __JavaScriptコードのリアルタイム分析__ +
  JavaScriptのコードエディタは、リアルタイムにコードの自動インデントと、コード保管や分析のシステムを提供します。 +
分析システムは、コンソールのエラー情報リストへのアクセスを保持している為、エラーアイコン（A）（B）をクリックすることでコンテキストヘルプを表示することができます。 +

........
........

== Components Editor

image:images/vsd_display_component.png[height=300]

// .Components Editor

配置されているコンポーネントの関連図を提供します。 +
マウス操作によってコンポーネント間の接続を変更することが可能です。 +
また、イベントが登録されている場合は、右側に登録済みイベントのリストが表示されます。 +

........
........

== Dataflow
image:images/vsd_display_dataflow.png[height=300]

// .Dataflow

配置されているウィジェットのデータフローを提供します。 +
ウィジェットが保持しているプロパティの一覧や、ウィジェット間でプロパティのコネクションが
設定されている場合は、状態の確認・変更・削除などを行うことが可能です。 +
* プロパティのコネクションの編集はデータフロービューからのみ変更が可能です。 +

........
........

== リソース コンソール
// image:images/vsd_display_fileview.png[height=300]
image:images/vsd_console_file01.png[height=150]

// .リソース コンソール

- リソースのコンソールは、プロジェクトで使用されているリソースを表示します。 +
__Resource Editor__および__GUI Editor__の下部に表示されます。 +
リソースは、JPEGまたはPNG画像、CSSファイル、JavaScriptファイル、HTML、ディレクトリやJSONファイルなどです。 +
- ファイルは以下の（A）、ディレクトリは（B）のように表示されます。 +
リソースフォルダでツリーをダブルクリックすることにより移動することができます。 +
レベルを下げるにはツリーのフルパスを表示するコンボボックス（C）を使用しなければなりません。 +

- 多くのファイルを含む場合には、画像ファイルのみを表示するなど、フィルタすることも可能です。 +
これを行うには、テキストフィールド（D）にフィルタ文字列を入力して下さい。 +
（E）と（F）のボタン選択により、表示モードを変更することが可能です（大アイコン、小アイコン）。 +

- リソースエディタを利用している場合、ファイルを開くには当該ファイルをダブルクリックして下さい。 +
最後に、コンテキストメニュー（G）でリソースとリソースディレクトリの削除、追加、空ディレクトリの作成が可能です。 +
また、リソースのファインダからファイルをアップロードすることも可能です。 +


........
........

== ワーニング コンソール
image:images/vsd_console_warning01.png[height=150]

// .ワーニング コンソール
- コンソールには、JavaScriptコードの品質の情報が表示されます。 +
現状では、編集中のファイルに関する情報だけ表示されます。 +

- メッセージ（A）では、違反のあるファイル、エラー発生している行、エラー自身を表示します。 +
あまりにもたくさんの深刻なエラーがある場合、システム解析を止めることもできます。 +

........
........

== デバッグ コンソール

image:images/vsd_console_file03.png[height=150]

// .デバッグ コンソール

- デバッグ用のコンソールログを表示します。 +
VSDシミュレータでアプリケーションを実行する時、次の呼び出し例のように、コンソール情報にメッセージを表示出来ます。 +
--------
console.log('hello world');
--------

- 右上のボタン（B）で表示中のログをクリアすることが可能です。 +
ボタン（C）ではコンソールの表示位置（高さ）を変更することができます +


