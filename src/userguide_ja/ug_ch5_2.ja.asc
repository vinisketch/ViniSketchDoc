イベントの取得と処理の設定
==========================

ここではウィジェット間でのイベントの取得と設定方法について説明します。 +


== UIの配置
まず、新規にプロジェクトを作成します。 +
プロジェクト情報は任意の情報を入力して下さい。 +
また、対象デバイスは前回同様iPhoneを選択しています。 +

........
........

image:images/vsd_event1_1.png[height=300]

イベントの設定方法の説明をするためのサンプルとして、++Button++を2個と++GMap++を任意の場所に配置します。 +

........
........

image:images/vsd_event1_2.png[height=300]

右下にある__App Components__で各ウィジェット名をダブルクリックすると変更出来ます。 +
後ほど、ソースコードの記述もありますので、分かり易い名前に変更しておきます。 +

........
........

image:images/vsd_event1_3.png[height=300]

ここでは、"show_btn"、"hide_btn"、"gmap"にそれぞれ変更しています。 +

........
........

image:images/vsd_event1_4.png[height=300]

次に++Button++に表示されるテキストラベルを変更します。 +
変更したい++Button++ウィジェットをクリックして選択します。 +
__Specification__の__text__を選び、"Button"を"SHOW"と"HIDE"にそれぞれ変更してください。 +

........
........

image:images/vsd_event1_5.png[height=300]

変更後__OK__ボタンをクリックするとイメージに反映されます。 +
これでウィジェットの配置は完了です。 +

これからボタンの動作を設定していきますが、ここで設定する動作としては以下の2つになります。 +

* "SHOW"ボタンを押下された場合、地図を表示する
* "HIDE"ボタンを押下された場合、地図を非表示にする


イベントの取得と設定については、アプローチとして4パターンありますので、それぞれ順番に説明して行きます。 +

アプリケーションを作成する際は、必要に応じて組み合わせて利用してください。 +


* その1：GUI Editorからすべて設定する
* その2：listener 関数を記述する
* その3：ウィジェットへのbindから記述する
* その4：独自のイベント listenerを作成する



== イベントの設定 その1
__GUI Editor__からすべて設定する場合の手順です。 +
ここではソースコードの記述は行いません。 +
（アプリケーションを作成する場合、必要に応じて、JavaScriptコードの記述が必要になる場合があります。） +

........
........

image:images/vsd_event1_6_0.png[height=300]

まず、"SHOW"ボタンを選択します。 +

........
........

image:images/vsd_event1_6_1.png[height=300]

左下にある__Events__の__select__を__Shift__キーを押しながらクリックし、そのまま +GMap+ ウィジェットまでドラッグします。 +

........
........

image:images/vsd_event1_7.png[height=300]

クリックを放すと、自動的にソースコードを作成するかを確認画面が表示されるので__Create__ボタンを選択します。

........
........

image:images/vsd_event1_8.png[height=300]

すると対象のウィジェット（"gmap"）とlistener 関数（"notify"）が表示されます。 +
listener 関数名をダブルクリックすると利用可能な一覧が表示されるので、__show__を選択してください。 +

........
........

image:images/vsd_event1_9.png[height=300]

画面の通りに__select__の下に"gmap"と"show"が表示されます。 +
また、右上の _×_ ボタンを押す事で、追加した設定を削除することが出来ます。 +

........
........

image:images/vsd_event1_10.png[height=300]

同様に"HIDE"ボタンも設定します。 +
選択する関数は"hide"にしてください。 +
これで完了です。 +

........
........

image:images/vsd_event1_run.png[height=300]

__Run__から実行し、シミュレータ上で動作を確認します。

........
........

image:images/vsd_event1_run_hide.png[height=300]

"HIDE"ボタンをクリックすると地図が消え、 +

........
........

image:images/vsd_event1_run_show.png[height=300]

"SHOW"ボタンをクリックすると地図が表示されることが確認出来たかと思います。 +


== イベントの設定 その2
次に、listener 関数をJavaScriptを使って記述する方法について説明します。 +

........
........

image:images/vsd_event2_1.png[height=300]

コードの記述を行う前に、1つウィジェットを追加してください。 +
++Text label++を配置し、ウィジェット情報を適切に変更してください。 +

........
........

image:images/vsd_event2_2.png[height=300]

"SHOW"ボタンを選択し、アプリケーションのメインビュー（"event_sample"）に対してイベント設定の追加を行います。 +
ここでは"event_sample"と"notify"が**イベントの設定 その1**で追加したイベントの横に追加表示されます。 +
"HIDE"ボタンも同様に設定してください。 +

........
........

image:images/vsd_event2_3.png[height=300]

イベントが正しく追加されたことを確認したら、右上の__Resource Editor__ボタンで、開発画面を切り替えてください。 +

........
........

image:images/vsd_event2_4.png[height=300]

メインソースコード（event_sample.js）が表示されます。 +
もし、何もソースコードが表示されていない場合は、__App Components__から表示することが可能です。 +

........
........

image:images/vsd_event2_5.png[height=300]

"notify" 関数に処理を追加します。 +

サンプルコードは以下の通りです。 +
追加した++Text label++の**text**の内容を選択されたボタンに応じて変更するというものです。 +

.Sample Code
----
  notify : function (event)
  {
    if (event.src === this.show_btn) {
      this.status_lbl.text = "Show";
    }
    if (event.src === this.hide_btn) {
      this.status_lbl.text = "Hide";
    }
  }
----


........
........

image:images/vsd_event2_run.png[height=300]  +
image:images/vsd_event2_run_hide.png[height=300]  +
実行し、動作を確認してください。


== イベントの設定 その3
ウィジェットに対するbindの設定からソースコード上で行う方法です。 +

........
........

image:images/vsd_event3_1.png[height=300]

**イベントの設定 その2**で追加した設定（event_sample/notify）を、 +

........
........

image:images/vsd_event3_2.png[height=300]

__×__ボタンを押して、削除してください。 +
"SHOW"ボタンと"HIDE"ボタンの両方に対して行います。 +

........
........

image:images/vsd_event3_3.png[height=300]

ソースコードを追加します。 +

各ボタンのbindを行う処理を"applicationStarted"の最後に追加しています。 +

.Sample Code
----
  applicationStarted : function (event)
  {
    this.mainViewVisibility (true);
    this.loadingStop ();

    this.show_btn.bind('select', this);
    this.hide_btn.bind('select', this);
  },

  notify : function (event)
  {
    if (event.src === this.show_btn) {
      this.status_lbl.text = "Show";
    }
    if (event.src === this.hide_btn) {
      this.status_lbl.text = "Hide";
    }
  }
----


== イベントの設定 その4
**イベントの設定 その3**では"notify"にイベント発生時の処理を記述していましたが、ここでは独自のlistenerを定義します。 +

........
........

image:images/vsd_event4_1.png[height=300]

独自に"showListener"と"hideListener"を定義します。 +
処理の内容は"notify"で記述していた内容と同じですが、各listenerの中で条件判定をする必要がないので、++Text label++に設定をする処理のみ記述します。 +

また、**イベントの設定 その3**で追加したbind処理にどのlistenerを呼び出すかを追加します。 +

.Sample Code
----
 applicationStarted : function (event)
  {
    this.mainViewVisibility (true);
    this.loadingStop ();

    this.show_btn.bind('select', this, this.showListener);
    this.hide_btn.bind('select', this, this.hideListener);
  },

  notify : function (event)
  {
  },

  showListener : function (event)
  {
    this.status_lbl.text = "Show";
  },

  hideListener : function (event)
  {
    this.status_lbl.text = "Hide";
  }
----

**イベントの設定 その2**から**イベントの設定 その4**はすべて同じ振る舞いをします。 +
++Text label++が正しく変更されることを確認してみてください。 +

