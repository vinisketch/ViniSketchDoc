Android向けアプリケーションの作成
=================================

== 必要なもの
- Android SDK
- Eclipse Classic
- ADT Plugin
- Android Device

== インストール
ここでは、Mac OS上にインストール方法を記述します。 +
Windowsを使用する場合の設定方法は http://docs.phonegap.com/en/2.3.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android[PhoneGap Official Site]を参照してください。 +


http://developer.android.com/sdk/index.html[Android SDK] をダウンロードします。 +
最新(2013/02現在)のSDKにはADTプラグインが組み込まれたEclipseが内包されているため、SDKのダウンロードだけで十分です。 +
adt-bundle-xxx.zipを任意の場所に展開します。 +

ターミナルから以下の通り実行し、.bash_profileにSDKまでのパスを記述します。 +

--------
Development/adt-bundle-xxx/sdk
--------

さらに、SDK配下にあるplatform-toolsとtoolsへのパスを通します。 +

--------
export PATH=${PATH}:/Development/adt-bundle-xxx/sdk/platform-tools:/Develpment/adt-bundle-xxx/sdk/tools
--------

bash_profileに記述したパスを読み込んだら、環境設定は終了です。 +

........
........

--------
source ~/.bash_profile
--------

image:../images/pg_install_intel.png[height=300]

adt-bundle-xxx/eclipse/Eclipseをダブルクリックして起動します。 +
workspaceを任意のフォルダに設定してください。 +
"Welcome!"ページを閉じ、__Window__メニューから__Android SDK Manager__を選択します。 +
__Android 4.0.3(API 15)__の__SDK Platform__, __Intel x86 Atom System Image__と__Extras__の__Intel x86 Emulator Accelerator(HAXM)__をインストールしてください。 +

........
........

image:../images/pg_emu_new.png[height=300]

同じ__Window__メニューから__Android Virtual Device Manager__を選択します。 +
__New__ボタンをクリックし、__Create new Android Virtual Device(AVD)__を表示します。 +

........
........

image:../images/pg_emu_newinfo.png[height=300]

__AVD Name__, __Device__, __Target__, __CPU/ABI__を設定し、__OK__ボタンをクリックします。 +
__Android Virtual Device Manager__に設定したエミュレータがリストアップされていることを確認してください。 +

== 読み込みと実行
image:../images/pg_new_project_android.png[height=300]

__File__ -> __New__ -> __Project...__を選択し、__New Project__で__Android__の__Android Project from Existing Code__を選択したら、__Next__をクリックします。 +

........
........

image:../images/pg_import_project_android.png[height=300]

__Browse...__ボタンをクリックし、エクスポートしたandroidフォルダを指定し、__Finish__をクリックします。

........
........

image:../images/pg_eclipse_main_android.png[height=300]

エクスポートしたAndroid用のソースコードがeclipseに新規プロジェクトとして読み込まれます。 +

........
........

image:../images/pg_eclipse_buildpath_android.png[height=300]

CordovaLibを参照するために、"cordova.jar"を参照する様に設定します。 +
libs/cordova.jarの上で、__Control__キーを押下しながらクリックし、メニューから__Build Path__ -> __Add to Build Path__を選択します。 +

........
........

image:../images/pg_eclipse_main_buildpath_android.png[height=300]

__Referenced Libraries__に"cordova.jar"が追加されていることを確認します。 +

........
........

image:../images/pg_eclipse_run_android.png[height=300]

__Control__キーを押下しながらクリックし、メニューから__Run As__ -> __Android Application__を
選択します。 +

........
........

image:../images/pg_run_android.png[height=300]

エミュレータが起動し、アプリケーションが実行されます。 +


== 実デバイス上で実行する
実際のデバイス上でアプリケーションの動作確認をします。 +


まず、Androidデバイス上で、__USB debugging__を有効にし、AndroidデバイスとPCをUSBケーブルで接続します。 +

image:../images/pg_ddms_devices.png[height=300]

__DDMS__に切り替え、__Devices__で接続したAndroidデバイスが認識されていることを確認します。 +

エミュレータでの実行と同様に、__Run__ -> __Android Application__を選択すると、Androidデバイス上にアプリケーションがインストールされ、実行します。 +

デバイスが認識されない場合は http://developer.android.com/tools/device.html[Android Developer Site]を参照してください。 +

